{
    "version": 3,
    "sources": [
        "../../../src/api/controller/goods.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "indexAction",
        "model",
        "goodsList",
        "select",
        "success",
        "skuAction",
        "goodsId",
        "get",
        "specificationList",
        "getSpecificationList",
        "productList",
        "getProductList",
        "detailAction",
        "info",
        "where",
        "find",
        "store",
        "id",
        "store_id",
        "gallery",
        "goods_id",
        "limit",
        "attribute",
        "field",
        "join",
        "order",
        "issue",
        "brand",
        "brand_id",
        "commentCount",
        "value_id",
        "type_id",
        "count",
        "hotComment",
        "commentInfo",
        "think",
        "isEmpty",
        "commentUser",
        "user_id",
        "content",
        "Buffer",
        "from",
        "toString",
        "add_time",
        "datetime",
        "Date",
        "nickname",
        "avatar",
        "pic_list",
        "comment_id",
        "comment",
        "data",
        "userHasCollect",
        "isUserHasCollect",
        "userId",
        "addFootprint",
        "categoryAction",
        "currentCategory",
        "parentCategory",
        "parent_id",
        "brotherCategory",
        "listAction",
        "categoryId",
        "brandId",
        "keyword",
        "isNew",
        "isHot",
        "page",
        "size",
        "sort",
        "goodsQuery",
        "whereMap",
        "is_new",
        "is_hot",
        "name",
        "add",
        "parseInt",
        "getTime",
        "orderMap",
        "retail_price",
        "filterCategory",
        "categoryIds",
        "getField",
        "parentIds",
        "concat",
        "category_id",
        "getCategoryWhereIn",
        "goodsData",
        "countSelect",
        "map",
        "v",
        "checked",
        "filterAction",
        "getChildCategoryId",
        "newAction",
        "bannerInfo",
        "url",
        "img_url",
        "hotAction",
        "relatedAction",
        "relatedGoodsIds",
        "relatedGoods",
        "goodsCategory",
        "countAction",
        "goodsCount",
        "is_delete",
        "is_on_sale"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/goods.js",
    "sourcesContent": [
        "const Base = require('./base.js');\n\nmodule.exports = class extends Base {\n  async indexAction() {\n    const model = this.model('goods');\n    const goodsList = await model.select();\n\n    return this.success(goodsList);\n  }\n\n  /**\n   * 获取sku信息，用于购物车编辑时选择规格\n   * @returns {Promise.<Promise|PreventPromise|void>}\n   */\n  async skuAction() {\n    const goodsId = this.get('id');\n    const model = this.model('goods');\n\n    return this.success({\n      specificationList: await model.getSpecificationList(goodsId),\n      productList: await model.getProductList(goodsId)\n    });\n  }\n\n  /**\n   * 商品详情页数据\n   * @returns {Promise.<Promise|PreventPromise|void>}\n   */\n  async detailAction() {\n    const goodsId = this.get('id');\n    const model = this.model('goods');\n\n    const info = await model.where({'id': goodsId}).find();\n    const store = await this.model('store').where({id: info.store_id}).find();\n    const gallery = await this.model('goods_gallery').where({goods_id: goodsId}).limit(4).select();\n    const attribute = await this.model('goods_attribute').field('nideshop_goods_attribute.value, nideshop_attribute.name').join('nideshop_attribute ON nideshop_goods_attribute.attribute_id=nideshop_attribute.id').order({'nideshop_goods_attribute.id': 'asc'}).where({'nideshop_goods_attribute.goods_id': goodsId}).select();\n    const issue = await this.model('goods_issue').select();\n    const brand = await this.model('brand').where({id: info.brand_id}).find();\n    const commentCount = await this.model('comment').where({value_id: goodsId, type_id: 0}).count();\n    const hotComment = await this.model('comment').where({value_id: goodsId, type_id: 0}).find();\n    let commentInfo = {};\n    if (!think.isEmpty(hotComment)) {\n      const commentUser = await this.model('user').field(['nickname', 'username', 'avatar']).where({id: hotComment.user_id}).find();\n      commentInfo = {\n        content: Buffer.from(hotComment.content, 'base64').toString(),\n        add_time: think.datetime(new Date(hotComment.add_time * 1000)),\n        nickname: commentUser.nickname,\n        avatar: commentUser.avatar,\n        pic_list: await this.model('comment_picture').where({comment_id: hotComment.id}).select()\n      };\n    }\n\n    const comment = {\n      count: commentCount,\n      data: commentInfo\n    };\n\n    // 当前用户是否收藏\n    const userHasCollect = await this.model('collect').isUserHasCollect(think.userId, 0, goodsId);\n\n    // 记录用户的足迹 TODO\n    await await this.model('footprint').addFootprint(think.userId, goodsId);\n\n    // return this.json(jsonData);\n    return this.success({\n      info: info,\n      store: store,\n      gallery: gallery,\n      attribute: attribute,\n      userHasCollect: userHasCollect,\n      issue: issue,\n      comment: comment,\n      brand: brand,\n      specificationList: await model.getSpecificationList(goodsId),\n      productList: await model.getProductList(goodsId)\n    });\n  }\n\n  /**\n   * 获取分类下的商品\n   * @returns {Promise.<*>}\n   */\n  async categoryAction() {\n    const model = this.model('category');\n    const currentCategory = await model.where({id: this.get('id')}).find();\n    const parentCategory = await model.where({id: currentCategory.parent_id}).find();\n    const brotherCategory = await model.where({parent_id: currentCategory.parent_id}).select();\n\n    return this.success({\n      currentCategory: currentCategory,\n      parentCategory: parentCategory,\n      brotherCategory: brotherCategory\n    });\n  }\n\n  /**\n   * 获取商品列表\n   * @returns {Promise.<*>}\n   */\n  async listAction() {\n    const categoryId = this.get('categoryId');\n    const brandId = this.get('brandId');\n    const keyword = this.get('keyword');\n    const isNew = this.get('isNew');\n    const isHot = this.get('isHot');\n    const page = this.get('page');\n    const size = this.get('size');\n    const sort = this.get('sort');\n    const order = this.get('order');\n\n    const goodsQuery = this.model('goods');\n\n    const whereMap = {};\n    if (!think.isEmpty(isNew)) {\n      whereMap.is_new = isNew;\n    }\n\n    if (!think.isEmpty(isHot)) {\n      whereMap.is_hot = isHot;\n    }\n\n    if (!think.isEmpty(keyword)) {\n      whereMap.name = ['like', `%${keyword}%`];\n      // 添加到搜索历史\n      await this.model('search_history').add({\n        keyword: keyword,\n        user_id: think.userId,\n        add_time: parseInt(new Date().getTime() / 1000)\n      });\n    }\n\n    if (!think.isEmpty(brandId)) {\n      whereMap.brand_id = brandId;\n    }\n\n    // 排序\n    let orderMap = {};\n    if (sort === 'price') {\n      // 按价格\n      orderMap = {\n        retail_price: order\n      };\n    } else {\n      // 按商品添加时间\n      orderMap = {\n        id: 'desc'\n      };\n    }\n\n    // 筛选的分类\n    let filterCategory = [{\n      'id': 0,\n      'name': '全部',\n      'checked': false\n    }];\n\n    const categoryIds = await goodsQuery.where(whereMap).getField('category_id', 10000);\n    if (!think.isEmpty(categoryIds)) {\n      // 查找二级分类的parent_id\n      const parentIds = await this.model('category').where({id: {'in': categoryIds}}).getField('parent_id', 10000);\n      // 一级分类\n      const parentCategory = await this.model('category').field(['id', 'name']).order({'sort_order': 'asc'}).where({'id': {'in': parentIds}}).select();\n\n      if (!think.isEmpty(parentCategory)) {\n        filterCategory = filterCategory.concat(parentCategory);\n      }\n    }\n\n    // 加入分类条件\n    if (!think.isEmpty(categoryId) && parseInt(categoryId) > 0) {\n      whereMap.category_id = ['in', await this.model('category').getCategoryWhereIn(categoryId)];\n    }\n\n    // 搜索到的商品\n    const goodsData = await goodsQuery.where(whereMap).field(['id', 'name', 'list_pic_url', 'retail_price']).order(orderMap).page(page, size).countSelect();\n    goodsData.filterCategory = filterCategory.map(function(v) {\n      v.checked = (think.isEmpty(categoryId) && v.id === 0) || v.id === parseInt(categoryId);\n      return v;\n    });\n    goodsData.goodsList = goodsData.data;\n\n    return this.success(goodsData);\n  }\n\n  /**\n   * 商品列表筛选的分类列表\n   * @returns {Promise.<Promise|void|PreventPromise>}\n   */\n  async filterAction() {\n    const categoryId = this.get('categoryId');\n    const keyword = this.get('keyword');\n    const isNew = this.get('isNew');\n    const isHot = this.get('isHot');\n\n    const goodsQuery = this.model('goods');\n\n    if (!think.isEmpty(categoryId)) {\n      goodsQuery.where({category_id: {'in': await this.model('category').getChildCategoryId(categoryId)}});\n    }\n\n    if (!think.isEmpty(isNew)) {\n      goodsQuery.where({is_new: isNew});\n    }\n\n    if (!think.isEmpty(isHot)) {\n      goodsQuery.where({is_hot: isHot});\n    }\n\n    if (!think.isEmpty(keyword)) {\n      goodsQuery.where({name: {'like': `%${keyword}%`}});\n    }\n\n    let filterCategory = [{\n      'id': 0,\n      'name': '全部'\n    }];\n\n    // 二级分类id\n    const categoryIds = await goodsQuery.getField('category_id', 10000);\n    if (!think.isEmpty(categoryIds)) {\n      // 查找二级分类的parent_id\n      const parentIds = await this.model('category').where({id: {'in': categoryIds}}).getField('parent_id', 10000);\n      // 一级分类\n      const parentCategory = await this.model('category').field(['id', 'name']).order({'sort_order': 'asc'}).where({'id': {'in': parentIds}}).select();\n\n      if (!think.isEmpty(parentCategory)) {\n        filterCategory = filterCategory.concat(parentCategory);\n      }\n    }\n\n    return this.success(filterCategory);\n  }\n\n  /**\n   * 新品首发\n   * @returns {Promise.<Promise|void|PreventPromise>}\n   */\n  async newAction() {\n    return this.success({\n      bannerInfo: {\n        url: '',\n        name: '坚持初心，为你寻觅世间好物',\n        img_url: 'http://yanxuan.nosdn.127.net/8976116db321744084774643a933c5ce.png'\n      }\n    });\n  }\n\n  /**\n   * 人气推荐\n   * @returns {Promise.<Promise|void|PreventPromise>}\n   */\n  async hotAction() {\n    return this.success({\n      bannerInfo: {\n        url: '',\n        name: '大家都在买的严选好物',\n        img_url: 'http://yanxuan.nosdn.127.net/8976116db321744084774643a933c5ce.png'\n      }\n    });\n  }\n\n  /**\n   * 商品详情页的大家都在看的商品\n   * @returns {Promise.<Promise|PreventPromise|void>}\n   */\n  async relatedAction() {\n    // 大家都在看商品,取出关联表的商品，如果没有则随机取同分类下的商品\n    const model = this.model('goods');\n    const goodsId = this.get('id');\n    const relatedGoodsIds = await this.model('related_goods').where({goods_id: goodsId}).getField('related_goods_id');\n    let relatedGoods = null;\n    if (think.isEmpty(relatedGoodsIds)) {\n      // 查找同分类下的商品\n      const goodsCategory = await model.where({id: goodsId}).find();\n      relatedGoods = await model.where({category_id: goodsCategory.category_id}).field(['id', 'name', 'list_pic_url', 'retail_price']).limit(8).select();\n    } else {\n      relatedGoods = await model.where({id: ['IN', relatedGoodsIds]}).field(['id', 'name', 'list_pic_url', 'retail_price']).select();\n    }\n\n    return this.success({\n      goodsList: relatedGoods\n    });\n  }\n\n  /**\n   * 在售的商品总数\n   * @returns {Promise.<Promise|PreventPromise|void>}\n   */\n  async countAction() {\n    const goodsCount = await this.model('goods').where({is_delete: 0, is_on_sale: 1}).count('id');\n\n    return this.success({\n      goodsCount: goodsCount\n    });\n  }\n};\n"
    ]
}